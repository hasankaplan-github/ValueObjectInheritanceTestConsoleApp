// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ValueObjectInheritanceTestConsoleApp.Infra.Db.Contexts;

#nullable disable

namespace ValueObjectInheritanceTestConsoleApp.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20221127064546_SpecialCustomer")]
    partial class SpecialCustomer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ValueObjectInheritanceTestConsoleApp.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_customer");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("ValueObjectInheritanceTestConsoleApp.Domain.SpecialCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_special_customer");

                    b.ToTable("special_customer", (string)null);
                });

            modelBuilder.Entity("ValueObjectInheritanceTestConsoleApp.Domain.Customer", b =>
                {
                    b.OwnsOne("ValueObjectInheritanceTestConsoleApp.Domain.DocumentContainer", "_documentContainer", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<DateTime?>("_issueDate")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("document_issue_date");

                            b1.Property<string>("_serialNumber")
                                .HasColumnType("text")
                                .HasColumnName("document_serial_number");

                            b1.Property<int>("_type")
                                .HasColumnType("integer")
                                .HasColumnName("document_type");

                            b1.HasKey("CustomerId");

                            b1.ToTable("customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId")
                                .HasConstraintName("fk_customer_customer_id");
                        });

                    b.Navigation("_documentContainer");
                });

            modelBuilder.Entity("ValueObjectInheritanceTestConsoleApp.Domain.SpecialCustomer", b =>
                {
                    b.OwnsMany("ValueObjectInheritanceTestConsoleApp.Domain.SpecialCustomerDocument", "_specialCustomerDocuments", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<Guid>("SpecialCustomerId")
                                .HasColumnType("uuid")
                                .HasColumnName("special_customer_id");

                            b1.HasKey("Id")
                                .HasName("pk_special_customer_document");

                            b1.HasIndex("SpecialCustomerId")
                                .HasDatabaseName("ix_special_customer_document_special_customer_id");

                            b1.ToTable("special_customer_document", (string)null);

                            b1.WithOwner("SpecialCustomer")
                                .HasForeignKey("SpecialCustomerId")
                                .HasConstraintName("fk_special_customer_document_special_customer_special_customer");

                            b1.OwnsOne("ValueObjectInheritanceTestConsoleApp.Domain.DocumentContainer", "_documentContainer", b2 =>
                                {
                                    b2.Property<Guid>("SpecialCustomerDocumentId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<DateTime?>("_issueDate")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("document_issue_date");

                                    b2.Property<string>("_serialNumber")
                                        .HasColumnType("text")
                                        .HasColumnName("document_serial_number");

                                    b2.Property<int>("_type")
                                        .HasColumnType("integer")
                                        .HasColumnName("document_type");

                                    b2.HasKey("SpecialCustomerDocumentId");

                                    b2.ToTable("special_customer_document");

                                    b2.WithOwner()
                                        .HasForeignKey("SpecialCustomerDocumentId")
                                        .HasConstraintName("fk_special_customer_document_special_customer_document_id");
                                });

                            b1.Navigation("SpecialCustomer");

                            b1.Navigation("_documentContainer")
                                .IsRequired();
                        });

                    b.Navigation("_specialCustomerDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
